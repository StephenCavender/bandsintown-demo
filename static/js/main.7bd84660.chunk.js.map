{"version":3,"sources":["components/Hero/Hero.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Hero","props","className","style","backgroundImage","artist","image_url","src","alt","name","tracker_count","upcoming_event_count","onClick","alert","App","useState","searchTerm","setSearchTerm","setArtist","handleChange","debounce","event","target","value","select","fetch","trim","then","response","json","result","onChange","type","placeholder","onKeyDown","key","isEmpty","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAkBeA,MAdf,SAAcC,GAEZ,OACE,sBAAKC,UAAU,OAAOC,MAAO,CAAEC,gBAAgB,QAAD,OAAUH,EAAMI,OAAOC,UAAvB,OAA9C,UACE,qBAAKC,IAAKN,EAAMI,OAAOC,UAAWJ,UAAU,eAAeM,IAAI,iBAC/D,sBAAKN,UAAU,cAAf,UACE,6BAAKD,EAAMI,OAAOI,OAClB,sCAAOR,EAAMI,OAAOK,cAApB,6BAAiDT,EAAMI,OAAOM,qBAA9D,2BAEF,wBAAQT,UAAU,SAASU,QAAS,kBAAMC,MAAM,qCAAhD,wB,OC6CSC,MApDf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OAGeF,mBAAS,IAHxB,mBAGNV,EAHM,KAGEa,EAHF,KAKPC,EAAeC,oBAAS,SAACC,GAC7BJ,EAAcI,EAAMC,OAAOC,SAC1B,GAeGC,EAAS,SAACnB,GACdoB,MAAM,wCAAD,OAAyCpB,EAAOqB,OAAhD,iBACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLZ,EAAUY,OAUd,OACE,sBAAK5B,UAAU,MAAf,UACE,gCACE,uBAAO6B,SAAUZ,EAAca,KAAK,OAAOC,YAAY,oBAAoBC,UAT3D,SAACb,GACH,UAAdA,EAAMc,KACRX,EAAOR,MAQL,wBAAQJ,QAAS,kBAAMY,EAAOR,IAA9B,uBAOAoB,kBAAQ/B,GAAU,sEAAgD,cAAC,EAAD,CAAMA,OAAQA,QCvCzEgC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7bd84660.chunk.js","sourcesContent":["import React from 'react';\nimport { ArtistData } from '../../models/artist';\nimport './Hero.css';\n\nfunction Hero(props: { artist: ArtistData }) {\n\n  return (\n    <div className=\"Hero\" style={{ backgroundImage: `url(\"${props.artist.image_url}\")` }}>\n      <img src={props.artist.image_url} className=\"Artist-Thumb\" alt=\"artist-thumb\" />\n      <div className=\"Artist-Info\">\n        <h1>{props.artist.name}</h1>\n        <p>{`${props.artist.tracker_count} Followers â€¢ ${props.artist.upcoming_event_count} Upcoming Concerts`}</p>\n      </div>\n      <button className=\"Action\" onClick={() => alert(\"suprise, I didn't implement this\")}>Follow</button>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React, { KeyboardEvent, useEffect, useState } from 'react';\nimport './App.css';\nimport Hero from './components/Hero/Hero';\nimport { ArtistData } from './models/artist';\nimport { debounce, isEmpty } from 'lodash';\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  // const [searchResults, setSearchResults] = useState([]);\n  const [artist, setArtist] = useState({} as ArtistData);\n\n  const handleChange = debounce((event) => {\n    setSearchTerm(event.target.value);\n  }, 0); // debounce was for getting search suggestions...\n\n  // search api blocked by CORS\n  // useEffect(() => {\n  //   if (!searchTerm) return;\n\n  //   fetch(`https://bandsintown.com/searchSuggestions?searchTerm=${searchTerm}`)\n  //   .then((response) => response.json())\n  //   .then(({ artists }) => {\n  //     // TODO: type this map func\n  //     const names = artists.map((a: any) => a.name);\n  //     setSearchResults(names);\n  //   });\n  // }, [searchTerm])\n\n  const select = (artist: string) => {\n    fetch(`https://rest.bandsintown.com/artists/${artist.trim()}?app_id=test`)\n    .then((response) => response.json())\n    .then((result: ArtistData) => {\n      setArtist(result);\n    });\n  }\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      select(searchTerm);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input onChange={handleChange} type=\"text\" placeholder=\"Search Artists...\" onKeyDown={handleKeyDown} />\n        <button onClick={() => select(searchTerm)}>Select</button>\n      </div>\n      {/* <ul>\n         {searchResults.map(item => (\n          <li>{item}</li>\n        ))}\n      </ul> */}\n      { isEmpty(artist) ? <h1>404 artist not found, try Nate Smith</h1> : <Hero artist={artist} /> }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}